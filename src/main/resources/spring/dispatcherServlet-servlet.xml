<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:p="http://www.springframework.org/schema/p"
xmlns:util="http://www.springframework.org/schema/util"
xmlns:context="http://www.springframework.org/schema/context"
xmlns:mvc="http://www.springframework.org/schema/mvc"
xsi:schemaLocation="http://www.springframework.org/schema/beans
					http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
					http://www.springframework.org/schema/util   
					http://www.springframework.org/schema/util/spring-util-3.1.xsd
					http://www.springframework.org/schema/context
					http://www.springframework.org/schema/context/spring-context-3.1.xsd
					http://www.springframework.org/schema/mvc  
    				http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd">
    				
	<context:annotation-config/>
	<!-- 需要扫描带注解类的包 -->
	<context:component-scan base-package="com.zhixin.zhfz.**.controller"/>
	<context:component-scan base-package="com.zhixin.zhfz.common.restful"/>

    <!-- 对于@RequestMapping标签的解析 可选配置 -->
    <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping"/>
    
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">  
	    <property name="messageConverters">  
	        <util:list id="beanList">
	        	<bean class="org.springframework.http.converter.StringHttpMessageConverter" />
	            <ref bean="mappingJacksonHttpMessageConverter" />
	        </util:list>  
	    </property>  
	</bean>  
  
	<bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" >
	 <property name="supportedMediaTypes">            
	 <list>                
		 <value>text/html;charset=UTF-8</value>
		 <value>application/json;charset=UTF-8</value>
		 <value>application/x-www-form-urlencoded;charset=UTF-8</value>        
	 </list>        
	 </property>
	</bean>
    
	<!-- 从一个独立的xml配置文件中引用excel视图展示类(当然也可以直接在spring-servlet.xml文件中定义excel视图展示类) -->
	<bean class="org.springframework.web.servlet.view.XmlViewResolver">
	<property name="location">
	<!-- 此视图在src目录下 -->
	   <value>classpath:spring/applicationContext-excel.xml</value>
	</property>
	<property name="order" value="10" />
	</bean>
	
    <!-- Default ViewResolver 视图解析器 -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 视图名称前缀和后缀 -->
        <property name="prefix" value="/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
    
	
	<!-- SpringMVC上传文件时，需要配置MultipartResolver处理器 --> 
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"> 
        <!-- 指定所上传文件的总大小不能超过20000KB。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 --> 
        <property name="maxUploadSize" value="-1"/>
    </bean> 

	<!-- SpringMVC在超出上传文件限制时，会抛出org.springframework.web.multipart.MaxUploadSizeExceededException --> 
    <!-- 该异常是SpringMVC在检查上传的文件信息时抛出来的，而且此时还没有进入到Controller方法中 --> 
    <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver"> 
        <property name="exceptionMappings"> 
            <props> 
                <!-- 遇到MaxUploadSizeExceededException异常时，自动跳转到/WEB-INF/jsp/error_fileupload.jsp页面 --> 
                <prop key="org.springframework.web.multipart.MaxUploadSizeExceededException">error_fileupload</prop> 
            </props> 
        </property> 
    </bean> 
    <!-- 
    <bean id="sessionRegistry" class="org.springframework.security.core.session.SessionRegistryImpl" /> 
     -->
</beans>